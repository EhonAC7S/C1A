Mise en place ce git le 15 mai

mise en place d'un cahier des charges au brouillon

12 mai

*Début du projet : création de la structure catégorie et recherches sur la lecture et l'écriture de fichiers
*Création de la fonction load : ne fonctionne pas, segmentation fault

15 mai

*Creation de l'application permettant de demander les entrées a l'utilisateur pour creer le "relevé de compte"
*Elle s'appelle Depense, elle créé un fichier nommé "transaction.info"
l'application demande dans l'ordre : date (jj/mm/aaaa), type (parmi CB, Liquide, Chèque), le destinataire (Saisie libre de 20 caracteres), le montant, et enfin la categorie (parmi Immobilier, Alimentaire, Imprévu, Essence, Extra)
*Une application Clear peut supprimer le fichier "transaction.info" s'il existe reinitialisant les données saisies.

16 mai

*creation d'une app qui lit les informations du fichier precedement créé
*probleme : ne fonctionne pas vraiment, en effet les informations de chaques lignes ne sont pas bien délimitées creant ainsi des lectures bizarres 
*Exemple : 08/05/2016,Liquide,Julia,50.56,Extra,,de,Julia,50.56,Extra,0.00,xtra
mais le fichier contient la ligne :
08/05/2016,Liquide,Julia,50.56,Extra
Nous cherchons une methode de lecture par caractere plutot que par ligne mais nous avons une erreur de segmentation dans le code actuel.

non on est le 16 encore andouille
16 //17 mai

*Terminaison de la fonction load : la boucle faisait un tour de trop et lisait une partie de la mémoire qu'elle ne devait pas, d'où l'erreur
*Amélioration de la structure catégorie : augmentation de la taille des dates de 10 à 11 pour le \0
*Ecriture de la fonction save
*Nécessité d'améliorer les fonctions pour le classement des dépenses et revenus

23 mai

Ecriture de la fonction de tri du relevé en catégories. Celle-ci ne fonctionne pas pour le moment : problèmes de types.

26 mai : 

*Terminaison de la fonction tri() : le problème venait de la définition de chaines de caractères avec le signe = au lieu de strcpy(). 
*Erreur de ségmentation corrigée par l'ajout d'un attribut nbelements à la structure relevé (permet d'éviter de devoir parcourir tout le tableau date ce qui faisait lire de la mémoire non autorisée.
*Problème d'indices de tableau résolu (décallage de 1)
*Je ne vois plus d'erreur à cette fonction pour le moment : elle range ce que je lui demande de ranger. Je pense faire l'appel à la fonction load() dans la fonction tri() pour éviter de le faire manuellement dans le main().

*Harmonisation du code entre nous deux. (grace au menu d'acceuil, et selction de termes communs pour la gestion de fichier et struture)
*mise en place de la gestion avancée des categories : creation de categories et sous categories par l'utilisateur, la conception/modelisation suppose la creation d'arbre (a 3 niveaux) pour gerer cela (seuil modifiable, categories et sous categories eventuelles) plus une sauvegarde et un cahrgement depuis un fichier des parametres. (parcours en profondeur?)

27 mai :

*Débugage du code et amélioration de la gestion des pointeurs. Gestion de la mémoire fonctionnelle.
*Début du développement du tri des opérations par date pour chaque catégorie.

28 mai : 
*terminaison de la fonction de tri par dates. Celle-ci ne semble plus provoquer de bugs. (utilisation d'algorithmes de tri, ajout de trois attributs à la structures categorie : jour, mois et année.
